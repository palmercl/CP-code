#Labels#
########################################################################################################
# #Setting Factors(will create new variable for factors)
# data$maternal_race.factor = factor(data$maternal_race,levels=c("1","2","3","4","5","6","7"))
###################################################################
#use iris data
data<-iris
#create dichotomous vitamin C variable
data$sepal_di<-as.factor((data$Sepal.Length<5)*1)
#set factor levels
levels(data$sepal_di)=c("<5",'>=5')
levels(data$Species)=c('Setosa','Versicolor','Virginica')
#Set Labels
label(data$sepal_di)='Sepal Length'
label(data$Sepal.Length)="Sepal Length"
label(data$Sepal.Width)='Sepal weight'
label(data$Petal.Length)='Petal Length'
label(data$Petal.Width)='Petal Width'
data$sepal_di
is.factor(data$sepal_di)
fx_section<-function(var_list){
for(i in length(var_list)){
if (is.factor(var_list[i])==T){
z<-'Hello'
}
else{
z<-'Goodbye'
}
}
}
fx_section(data['sepal_di'])
fx_section<-function(var_list){
for(i in length(var_list)){
if (is.factor(var_list[i])==T){
z<-'Hello'
return(z)
}
else{
z<-'Goodbye'
return(z)
}
}
}
fx_section(data['sepal_di'])
is.factor(data['sepal_di'])
data$sepal_di
is.factor(data$sepal_di)
data['sepal_di']
c(data$sepal_di,data$Sepal.Length)
fx_section<-function(var_list){
for(i in length(var_list)){
if (is.factor(var_list[i])==T){
z<-'Hello'
return(z)
}
else{
z<-'Goodbye'
return(z)
}
}
}
fx_section(data$sepal_di)
fx_section(data$Sepal.Length)
data['sepal_di']
is.factor(data['sepal_di'])
is.numeirc(data['sepal_di'])
is.numeric(data['sepal_di'])
is.numeric(data['Sepal.Length'])
as.list(c(data$sepal_di,data$Sepal.Length))
c('data$sepal_di','data$Sepal.Length')
c('data$sepal_di','data$Sepal.Length')[1]
c('data$sepal_di','data$Sepal.Length')[2]
fx_section(c('data$sepal_di','data$Sepal.Length'))
fx_section(c('data$Sepal.Length','data$sepal_di'))
attach(data)
fx_section(c(sepal_di,Sepal.Length))
fx_section(c(Sepal.Length,sepal_di))
Sepal.Length
a <- data.frame(x = 1:10, y = 1:10)
b <- function(df, name){
eval(substitute(name), df)
}
b(a, x)
detach(data)
sepal.di
b(sepal.di,data)
b(sepal_di,data)
b(data,sepal_di)
fx_section<-function(var_list){
for(i in length(var_list)){
variable<- eval(substitute(var_list[i]), df)
if (is.factor(variable)==T){
z<-'Hello'
return(z)
}
else{
z<-'Goodbye'
return(z)
}
}
}
fx_section(Sepal.Length)
b(data,'sepal_di')
data[1]
data10
names(data)
data[6]
is.numeric(data[6])
is.numeric(data[1])
names(data)
apply(data,2,is.factor)
is.factor(data$sepal_di)
fx<-function(variable){
z<-mean(variable)
z
}
fx<-function(variable){
z<-mean(data$variable)
z
}
fx(sepal_di)
fx(Sepal.Length)
fx(data$Sepal.Length)
data$'Sepal.Length'
fx('Sepal.Length')
fx<-function(variable){
z<-mean(paste0('data$',variable))
z
}
fx('Sepal.Length')
fx_section<-function(var_list){
for(i in 1:2){
variable<- eval(substitute(var_list[i]), df)
if (is.factor(variable)==T){
z<-'Hello'
return(z)
}
else{
z<-'Goodbye'
return(z)
}
}
}
fx_section(Sepal.Length)
fx_section<-function(var_list){
if (is.factor(variable)==T){
z<-'Hello'
return(z)
}
else{
z<-'Goodbye'
return(z)
}
}
}
fx_section<-function(var_list){
if (is.factor(variable)==T){
z<-'Hello'
return(z)
}
else{
z<-'Goodbye'
return(z)
}
}
fx_section(Sepal.Length)
fx_section(data$Sepal.Length)
fx_section<-function(var_list){
if (is.factor(var_list)==T){
z<-'Hello'
return(z)
}
else{
z<-'Goodbye'
return(z)
}
}
fx_section(data$Sepal.Length)
fx_section(data$sepal_di)
prop_row<- function(y,x) {
temp<-table(y,x)
temp.prop<-round(prop.table(temp,2)*100,0)
p<-round(chisq.test(temp)$p.value,4)
temp1<-paste0(table(y), ' (',round(prop.table(table(y))*100,0), '%)')
temp2<-c(Variable="",c(rep("",ncol(temp)+1)),Pval=p)
for(i in (1:nrow(temp))){
temp2<-rbind(temp2,c(Variable=rownames(temp)[i],temp1[i],
paste0(temp[i,]," (",temp.prop[i,],"%)"),Pval=" "))
}
t<-data.frame(temp2,row.names=NULL)
t$Pval<-as.character(t$Pval)
t$Pval[t$Pval==0]<-"<0.0001"
return(t)
}
mean_row<-function(y,x){
mean.all<-round(mean(y,na.rm=T))
sd.all<-round(sd(y,na.rm=T))
mean.y<-round(tapply(y,x,mean,na.rm=T))
sd.y<-round(tapply(y,x,sd,na.rm=T))
if (length(mean.y) == 2){
p.y<-round(t.test(y~as.factor(x),data=dat)$p.value,4)
} else{
p.y<-round(summary(aov(y~as.factor(x)))[[1]][[1,"Pr(>F)"]],4)}
m<-matrix(0,ncol=length(mean.y)+3,nrow=1)
t<-data.frame(rbind(m,c(Variable="", paste0(mean.all,"±",sd.all), paste0(mean.y,"±",sd.y),Pval=p.y)))[-1,]
t$Pval<-as.character(t$Pval)
t$Pval[t$Pval==0]<-"<0.0001"
return(t)
}
fx_section<-function(var,group){
if (is.factor(var)==T){
temp<-prop_row(var,group)
return(temp)
}
else{
temp<-mean_row(var,group)
return(temp)
}
}
names(data)
fx_section(data$sepal_di,data$Species)
fx_section(data$Sepal.Length,data$Species)
names(dat)
names(data)
min(Sepal.Length)
min(data$Sepal.Length)
min(data$Sepal.Width)
median_row<-function(y,x){
med.all<-round(median(y,na.rm=T))
q1.all<-round(quantile(y,.25,na.rm=T))
q2.all<-round(quantile(y,.75,na.rm=T))
med.y<-round(tapply(y,x,median,na.rm=T))
q1<-round(tapply(y,x,function(x) quantile(x,.25,na.rm=T)))
q2<-round(tapply(y,x,function(x) quantile(x,.75,na.rm=T)))
if (length(med.y) == 2){
p.y<-round(wilcox.test(y~x)$p.value,4)
} else{
p.y<-round(kruskal.test(y~x)$p.value,4)}
m<-matrix(0,ncol=length(med.y)+3,nrow=1)
t<-data.frame(rbind(m,c(Variable="",paste0(med.all," (",q1.all,", ",q2.all,")"),
paste0(med.y," (",q1,", ",q2,")"),Pval=p.y)))[-1,]
t$Pval<-as.character(t$Pval)
t$Pval[t$Pval==0]<-"<0.0001"
return(t)
}
fx_section<-function(var,group){
if (is.numeric(var)==T & min(var)>2){
temp<-median_row(var,group)
return(temp)
}
else if (is.numeric(var)==T & min(var)<=2){
temp<-prop_row(var,group)
return(temp)
}
else (is.factor(var)==T){
temp<-prop_row(var,group)
return(temp)
}
}
fx_section<-function(var,group){
if(is.numeric(var)==T & min(var)>2){
temp<-median_row(var,group)
return(temp)
} else if(is.numeric(var)==T & min(var)<=2){
temp<-prop_row(var,group)
return(temp)
}else(is.factor(var)==T){
temp<-prop_row(var,group)
return(temp)
}
}
fx_section<-function(var,group){
if(is.numeric(var)==T & min(var)>2){
temp<-median_row(var,group)
return(temp)
} else if(is.numeric(var)==T & min(var)<=2){
temp<-prop_row(var,group)
return(temp)
}else(is.factor(var)==T){
temp<-prop_row(var,group)
return(temp)
}
}
fx_section<-function(var,group){
if(is.numeric(var)==T & min(var)>2){
temp<-median_row(var,group)
return(temp)
} else if(is.numeric(var)==T & min(var)<=2){
temp<-prop_row(var,group)
return(temp)
}
}
fx_section<-function(var,group){
if(is.numeric(var)==T & min(var)>2){
temp<-median_row(var,group)
return(temp)
} if(is.numeric(var)==T & min(var)<=2){
temp<-prop_row(var,group)
return(temp)
}
else(is.factor(var)==T){
temp<-prop_row(var,group)
return(temp)
}
}
fx_section<-function(var,group){
if(is.numeric(var)==T){
if(min(var)<=2){
temp<-prop_row(var,group)
return(temp)}
else(min(var)>2){
temp<-median_row(var,group)
return(temp)
}}
else{
temp<-prop_row(var,group)
return(temp)
}
}
fx_section<-function(var,group){
if(is.numeric(var)==T){
if(min(var)<=2){
temp<-prop_row(var,group)
return(temp)}
else{
temp<-median_row(var,group)
return(temp)
}}
else{
temp<-prop_row(var,group)
return(temp)
}
}
fx_section(data$Sepal.Length,data$Species)
min(dat$Sepal.Length)
min(data$Sepal.Length)
min(data$Sepal.Width)
fx_section(data$Sepal.Width,data$Species)
min(data$Sepal.Width)
is.numeric(data$Sepal.Width)
fx_section<-function(var,group){
if(is.numeric(var)==T){
if(min(var)<3){
temp<-prop_row(var,group)
return(temp)}
else{
temp<-median_row(var,group)
return(temp)
}}
else{
temp<-prop_row(var,group)
return(temp)
}
}
fx_section(data$Sepal.Width,data$Species)
fx_section<-function(var,group){
if(is.numeric(var)==T){
if(min(var)<3){
temp<-prop_row(var,group)
return(temp)}
else if(min(var)>=3){
temp<-median_row(var,group)
return(temp)
}
}
else{
temp<-prop_row(var,group)
return(temp)
}
}
fx_section(data$Sepal.Width,data$Species)
fx_section<-function(var,group){
if(is.numeric(var)==T){
if(min(var)<3){
temp<-prop_row(var,group)
return(temp)}
else{
temp<-median_row(var,group)
return(temp)
}
else{
temp<-prop_row(var,group)
return(temp)
}
}}
fx_section<-function(var,group){
if(is.numeric(var)==T){
if(min(var)<3){
temp<-mean_row(var,group)
return(temp)}
else{
temp<-median_row(var,group)
return(temp)
}
}
else{
temp<-prop_row(var,group)
return(temp)
}
}
fx_section(data$Sepal.Width,data$Species)
sd(data$Sepal.Width)
fx_section(data$sepal_di,data$Species)
fx_section<-function(var,group){
if(is.numeric(var)==T){
if(min(var)<3){
temp<-mean_row(var,group)
return(temp)}
else{
temp<-median_row(var,group)
return(temp)
}
}
else{
temp<-prop_row(var,group)
return(temp)
}
}
apply(data[c('Sepal.Length','Sepal.Width',"sepal_di")],2,fx_section)
apply(data[c('Sepal.Length','Sepal.Width',"sepal_di")],2,fx_section,data$Species)
sapply(data,is.numeric)
sapply(data,fx_section,data$Species)
tapply(data,2,is.numeric)
apply(data,2,is.numeric)
data[1]
data[6]
is.numeric(data[6])
is.numeric(data[1])
library(knitr)
library(moments)
source('00_Data_setup.R')
source('01_Row_functions.R')
source('02_Table_functions.R')
source('03_Model_functions.R')
lapply(dat[c('sepal_di','Sepal.Length','Petal.Length','Sepal.Width','Petal.Width')],fx_symbol)
dat<-data[data$Species!='Setosa',]
lapply(dat[c('sepal_di','Sepal.Length','Petal.Length','Sepal.Width','Petal.Width')],fx_symbol)
dat<-data[data$Species!='Setosa',]
dat$Species<-as.factor(as.character(dat$Species))
################################################################################################
#vector with variables and group/ treatment variable
tab1<-final_table(c('sepal_di','Sepal.Length','Petal.Length','Sepal.Width','Petal.Width'),dat$Species)
paste0(label(dat[c('sepal_di','Sepal.Length','Petal.Length','Sepal.Width','Petal.Width')]),lapply(dat[c('sepal_di','Sepal.Length','Petal.Length','Sepal.Width','Petal.Width')],fx_symbol))
#bring in row functions
#source('01_Row_functions.r')
#######################################################################################################
#These functions work regardless of number of columns in table (groups in dataset)#
#set column names with sample sizes
column_label<-function(x){
c("Variable", paste0("All (n=",sum(table(x)),")"),
paste0(levels(x)," (n=",table(x),")"),
"P Value")}
###################################################################################
fx_rows<-function(var,group){
if(is.numeric(var)==T){
if(abs(skewness(var,na.rm=T))<3){
temp<-mean_row(var,group)
}
else{
temp<-median_row(var,group)
}
}
else if(is.numeric(var)==F & length(levels(var))<3){
temp<-prop_row_one(var,group)
}
else{
temp<-prop_row(var,group)
}
return(temp)
}
fx_symbol<-function(var){
if(is.numeric(var)==T){
if(abs(skewness(var,na.rm=T))>3){
symbol<-"*"
}
else{
symbol<-""
}
}
else{
symbol<-""
}
return(symbol)
}
final_table<-function(var,group){
#create table
temp<-data.frame(do.call(rbind,lapply(dat[var],fx_rows,group)),row.names=NULL)
temp$Variable<-as.character(temp$Variable)
temp$Variable[temp$Variable==""]<-paste0(label(dat[var]),lapply(dat[(var)],fx_symbol))
#set column names with sample sizes
colnames(temp)<-column_label(group)
#remove numbering from factor levels
temp$Variable<-gsub(".*\\^", "", temp$Variable)
return(temp)
}
###########################################################
#Use iris data with two categories
dat<-data[data$Species!='Setosa',]
dat$Species<-as.factor(as.character(dat$Species))
################################################################################################
#vector with variables and group/ treatment variable
tab1<-final_table(c('sepal_di','Sepal.Length','Petal.Length','Sepal.Width','Petal.Width'),dat$Species)
tab1
library(Hmisc)
library(moments)
library(lme4)
########################################################################
source('01_functions.R')
source('C:/Repositories/CP-code/R code/Table code/01_Row_functions.R')
source('C:/Repositories/CP-code/R code/Table code/02_Table_functions.R')
source('00_data.R')
###############################################################################################
